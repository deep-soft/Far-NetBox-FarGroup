#2023-10-17 08:30
name: act-Release

on:
  workflow_dispatch:
#  push:
#    branches:
#      - master

jobs:

  build:
    strategy:
      fail-fast: true
      matrix:
        build: [
                 nmake_cl_x64_release,
                 nmake_cl_x86_release,
                 nmake_cl_ARM64_release,
               ]

        include:
          - { build: nmake_cl_x64_release,    arch: amd64,       platform: x64,   }
          - { build: nmake_cl_x86_release,    arch: amd64_x86,   platform: x86,   }
          - { build: nmake_cl_ARM64_release,  arch: amd64_arm64, platform: ARM64, }

    env:
      BUILD_TYPE: Release

    runs-on: windows-2019
    steps:
      - name: Checkout source
        uses: deep-soft/checkout@v4

      - name: Get version
        shell: bash
        run: |
          export VERSION_MAJOR=$(grep "NETBOX_VERSION_MAJOR" src/NetBox/plugin_version.hpp | sed -e "s/^.* NETBOX_VERSION_MAJOR\s*\([0-9]\+\)/\1/g")
          export VERSION_MINOR=$(grep "NETBOX_VERSION_MINOR" src/NetBox/plugin_version.hpp | sed -e "s/^.* NETBOX_VERSION_MINOR\s*\([0-9]\+\)/\1/g")
          export VERSION_PATCH=$(grep "NETBOX_VERSION_PATCH" src/NetBox/plugin_version.hpp | sed -e "s/^.* NETBOX_VERSION_PATCH\s*\([0-9]\+\)/\1/g")
          export VERSION_BUILD=$(grep "NETBOX_VERSION_BUILD" src/NetBox/plugin_version.hpp | sed -e "s/^.* NETBOX_VERSION_BUILD\s*\([0-9]\+\)/\1/g")
          echo "VERSION=$VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH.$VERSION_BUILD.$GITHUB_RUN_NUMBER">> $GITHUB_ENV

      - name: Set the pack file name
        shell: bash
        run: |
          echo "netbox_name=NetBox.${{ matrix.platform }}.${{ env.version }}.7z" >> $GITHUB_ENV
          echo "netbox_pdb_name=NetBox.${{ matrix.platform }}.${{ env.version }}.pdb.7z" >> $GITHUB_ENV

      - name: Add C++ build tools to PATH
        #uses: deep-soft/msvc-dev-cmd@v1.12.1
        uses: deep-soft/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}

      - name: Setup cache
        uses: deep-soft/cache@v3
        with:
          path: ${{ github.workspace }}
          key: cache-${{ matrix.arch }}
          restore-keys: |
            cache-${{ matrix.arch }}

      - name: Cleanup
        continue-on-error: true
        shell: bash
        run: |
          rm ./*.7z; op_result=$?

      - name: Create Build folder
        run: cmake -E make_directory build

      - name: Configure CMake
        shell: bash
        working-directory: build
        run: >
          cmake -G "NMake Makefiles" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DPROJECT_PLATFORM=${{ matrix.platform }} $GITHUB_WORKSPACE/src/NetBox

      - name: Build
        working-directory: build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE

      - name: pack plugin
        shell: bash
        run: |
          #cp LICENSE.txt README.md README.RU.md README.PL.md ./Far3_${{ matrix.platform }}/Plugins/NetBox/
          cp LICENSE.txt README.md ./Far3_${{ matrix.platform }}/Plugins/NetBox/
          7z a -m0=LZMA -mf=BCJ2 -mx9 ${{ env.netbox_name }} ./Far3_${{ matrix.platform }}/Plugins/NetBox/* -xr!*.pdb \
            -xr!NetBox.map -xr!NetBoxPol.lng -xr!NetBoxRus.lng -xr!NetBoxSpa.lng -xr!README.PL.md -xr!README.RU.md
          7z a -m0=LZMA -mf=off -mx9 ${{ env.netbox_pdb_name }} ./Far3_${{ matrix.platform }}/Plugins/NetBox/NetBox.pdb

      - name: Upload result
        uses: deep-soft/upload-artifact@v3
        with:
          name: result
          path: ./*.7z
          retention-days: 1

  create-release:
    needs: [build]
    runs-on: windows-2019

    steps:
      - name: Checkout source
        uses: deep-soft/checkout@v4

      - name: Get version
        id: get_version
        shell: bash
        run: |
          export VERSION_MAJOR=$(grep "NETBOX_VERSION_MAJOR" src/NetBox/plugin_version.hpp | sed -e "s/^.* NETBOX_VERSION_MAJOR\s*\([0-9]\+\)/\1/g")
          export VERSION_MINOR=$(grep "NETBOX_VERSION_MINOR" src/NetBox/plugin_version.hpp | sed -e "s/^.* NETBOX_VERSION_MINOR\s*\([0-9]\+\)/\1/g")
          export VERSION_PATCH=$(grep "NETBOX_VERSION_PATCH" src/NetBox/plugin_version.hpp | sed -e "s/^.* NETBOX_VERSION_PATCH\s*\([0-9]\+\)/\1/g")
          export VERSION_BUILD=$(grep "NETBOX_VERSION_BUILD" src/NetBox/plugin_version.hpp | sed -e "s/^.* NETBOX_VERSION_BUILD\s*\([0-9]\+\)/\1/g")
          echo "version=$VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH.$VERSION_BUILD.$GITHUB_RUN_NUMBER"
          echo "VERSION=$VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH.$VERSION_BUILD.$GITHUB_RUN_NUMBER">> $GITHUB_ENV

      - name: Download result
        uses: deep-soft/download-artifact@v3
        with:
          name: result

#      - name: Create release
#        shell: bash
#        run: gh release create v${{ env.version }} -t "v${{ env.version }}" -n "NetBox ${{ env.version }}" ./*.7z
#        env:
#          # GITHUB_TOKEN: ${{secrets.PACKAGES_GITHUB_TOKEN}}
#          GITHUB_TOKEN: ${{github.token}}
          
      - name: Publish Release
        continue-on-error: true
        uses: deep-soft/action-gh-release@v1
        with:
          draft: false
          tag_name: "v${{ env.version }}"
          body: "Far NetBox: v${{ env.version }}"
          files: |
            ./*.7z

      - name: Prepare latest Release
        continue-on-error: false
        shell: bash
        run: |
          rm *pdb.7z; op_result=$?
          mv NetBox.x64*.7z NetBox.x64.7z
          mv NetBox.x86*.7z NetBox.x86.7z
          mv NetBox.ARM64*.7z NetBox.ARM64.7z

      - name: Publish latest Release
        continue-on-error: false
        uses: deep-soft/action-gh-release@v1
        with:
          draft: false
          tag_name: Far-NetBox-latest
          body: "Far NetBox latest: v${{ env.version }}"
          files: |
            ./*.7z

      - name: Cleanup
        continue-on-error: true
        shell: bash
        run: |
          #rm ./*.7z; op_result=$?
          #rm ./*.zip; op_result=$?
          rm ./*.7z || true;
          rm ./*.zip || true;
